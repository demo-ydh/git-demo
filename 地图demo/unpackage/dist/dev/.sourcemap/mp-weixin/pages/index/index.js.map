{"version":3,"file":"index.js","sources":["pages/index/index.vue","../../HBuilderX.4.76.2025082103/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaW5kZXgvaW5kZXgudnVl"],"sourcesContent":["<template>\r\n\t<view class=\"content\">\r\n\t\t<view class=\"text-area\">\r\n\t\t\t<text class=\"title\">{{title}}</text>\r\n\t\t</view>\r\n\t</view>\r\n\t\r\n\t<!-- 地图组件 -->\r\n\t<view class=\"map-container\">\r\n\t\t<map \r\n\t\t\tid=\"myMap\"\r\n\t\t\tstyle=\"width: 100%; height: 600rpx;\"\r\n\t\t\t:latitude=\"latitude\"\r\n\t\t\t:longitude=\"longitude\"\r\n\t\t\t:markers=\"markers\"\r\n\t\t\t:polyline=\"polyline\"\r\n\t\t\t:scale=\"16\"\r\n\t\t\t:show-location=\"true\"\r\n\t\t\t@tap=\"getLocationInfo\"\r\n\t\t></map>\r\n\t</view>\r\n\t\r\n\t<!-- 路线规划输入框 -->\r\n\t<view class=\"route-planner\">\r\n\t\t<view class=\"input-group\">\r\n\t\t\t<text class=\"label\">起点：</text>\r\n\t\t\t<input type=\"text\" v-model=\"startLocationName\" placeholder=\"当前位置\" readonly />\r\n\t\t</view>\r\n\t\t<view class=\"input-group\">\r\n\t\t\t<text class=\"label\">终点：</text>\r\n\t\t\t<input type=\"text\" v-model=\"endLocationName\" placeholder=\"请输入目的地\" />\r\n\t\t</view>\r\n\t\t<button type=\"primary\" @click=\"planRoute\">规划路线</button>\r\n\t\t<button type=\"default\" @click=\"saveLocation\">保存当前位置</button>\r\n\t\t<button type=\"default\" @click=\"showSavedLocations\">查看历史位置</button>\r\n\t</view>\r\n\t\r\n\t<!-- 历史位置列表 -->\r\n\t<view class=\"history-list\" v-if=\"showHistory\">\r\n\t\t<view class=\"history-title\">历史位置</view>\r\n\t\t<view class=\"history-item\" v-for=\"(item, index) in savedLocations\" :key=\"index\">\r\n\t\t\t<text>{{item.name || '未命名位置'}}</text>\r\n\t\t\t<text>{{item.latitude}}, {{item.longitude}}</text>\r\n\t\t\t<text>{{item.time}}</text>\r\n\t\t\t<button size=\"mini\" @click=\"setAsEndLocation(item)\">设为终点</button>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttitle: '地图定位与路线规划',\r\n\t\t\t\tlatitude: 39.909,\r\n\t\t\t\tlongitude: 116.39742,\r\n\t\t\t\tmarkers: [],\r\n\t\t\t\tpolyline: [],\r\n\t\t\t\tstartLocation: null,\r\n\t\t\t\tendLocation: null,\r\n\t\t\t\tstartLocationName: '当前位置',\r\n\t\t\t\tendLocationName: '',\r\n\t\t\t\tsavedLocations: [],\r\n\t\t\t\tshowHistory: false,\r\n\t\t\t\t// MongoDB 连接配置（实际项目中应放在后端）\r\n\t\t\t\tdbConfig: {\r\n\t\t\t\t\t// 注意：在实际项目中，不要在前端直接连接MongoDB\r\n\t\t\t\t\t// 这里只是为了演示目的，实际应通过后端API进行操作\r\n\t\t\t\t\tapiBaseUrl: 'https://your-backend-api.com'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync onLoad() {\r\n\t\t\tthis.title = '地图定位与路线规划';\r\n\t\t\t// 获取用户位置权限并定位\r\n\t\t\tawait this.getUserLocation();\r\n\t\t\t// 加载保存的位置信息\r\n\t\t\tthis.loadSavedLocations();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 获取用户位置\r\n\t\t\tasync getUserLocation() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 检查位置权限\r\n\t\t\t\t\tconst authSetting = await uni.getSetting();\r\n\t\t\t\t\tif (!authSetting.authSetting['scope.userLocation']) {\r\n\t\t\t\t\t\t// 请求位置权限\r\n\t\t\t\t\t\tconst res = await uni.authorize({\r\n\t\t\t\t\t\t\tscope: 'scope.userLocation'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 获取当前位置\r\n\t\t\t\t\tconst locationRes = await uni.getLocation({\r\n\t\t\t\t\t\ttype: 'gcj02',\r\n\t\t\t\t\t\taltitude: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新位置信息\r\n\t\t\t\t\tthis.latitude = locationRes.latitude;\r\n\t\t\t\t\tthis.longitude = locationRes.longitude;\r\n\t\t\t\t\tthis.startLocation = {\r\n\t\t\t\t\t\tlatitude: locationRes.latitude,\r\n\t\t\t\t\t\tlongitude: locationRes.longitude\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新地图标记\r\n\t\t\t\t\tthis.updateMarkers();\r\n\t\t\t\t\tconsole.log('定位成功:', locationRes);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error) {\r\n\t\t\t\t\tconsole.error('获取位置失败:', error);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '获取位置失败，请检查权限设置',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 更新地图标记\r\n\t\t\tupdateMarkers() {\r\n\t\t\t\tthis.markers = [];\r\n\t\t\t\t\r\n\t\t\t\t// 添加起点标记\r\n\t\t\t\tif (this.startLocation) {\r\n\t\t\t\t\tthis.markers.push({\r\n\t\t\t\t\t\tid: 1,\r\n\t\t\t\t\t\tlatitude: this.startLocation.latitude,\r\n\t\t\t\t\t\tlongitude: this.startLocation.longitude,\r\n\t\t\t\t\t\ticonPath: '/static/location.svg',\r\n\t\t\t\t\t\twidth: 30,\r\n\t\t\t\t\t\theight: 30,\r\n\t\t\t\t\t\ttitle: '起点'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 添加终点标记\r\n\t\t\t\tif (this.endLocation) {\r\n\t\t\t\t\tthis.markers.push({\r\n\t\t\t\t\t\tid: 2,\r\n\t\t\t\t\t\tlatitude: this.endLocation.latitude,\r\n\t\t\t\t\t\tlongitude: this.endLocation.longitude,\r\n\t\t\t\t\t\ticonPath: '/static/location.svg',\r\n\t\t\t\t\t\twidth: 30,\r\n\t\t\t\t\t\theight: 30,\r\n\t\t\t\t\t\ttitle: '终点'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 规划路线\r\n\t\t\tasync planRoute() {\r\n\t\t\t\tif (!this.endLocationName) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请输入目的地',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 这里使用微信小程序的地图接口进行路线规划\r\n\t\t\t\t\t// 实际项目中可能需要调用地图服务商的API（如腾讯地图、高德地图等）\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 模拟地址解析（实际应调用地图API）\r\n\t\t\t\t\t// 这里为了演示，使用固定的终点坐标\r\n\t\t\t\t\tthis.endLocation = {\r\n\t\t\t\t\t\tlatitude: 39.9042,\r\n\t\t\t\t\t\tlongitude: 116.4074\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新地图标记\r\n\t\t\t\t\tthis.updateMarkers();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 绘制路线\r\n\t\t\t\t\tthis.drawRoute();\r\n\t\t\t\t\t\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '路线规划成功',\r\n\t\t\t\t\t\ticon: 'success'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error) {\r\n\t\t\t\t\tconsole.error('路线规划失败:', error);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '路线规划失败',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 绘制路线\r\n\t\t\tdrawRoute() {\r\n\t\t\t\tif (!this.startLocation || !this.endLocation) return;\r\n\t\t\t\t\r\n\t\t\t\t// 简单的两点之间的直线（实际应使用地图API获取真实路线）\r\n\t\t\t\tthis.polyline = [{\r\n\t\t\t\t\tpoints: [\r\n\t\t\t\t\t\t{latitude: this.startLocation.latitude, longitude: this.startLocation.longitude},\r\n\t\t\t\t\t\t{latitude: this.endLocation.latitude, longitude: this.endLocation.longitude}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tcolor: '#007AFF',\r\n\t\t\t\t\twidth: 4,\r\n\t\t\t\t\tdottedLine: false\r\n\t\t\t\t}];\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 保存当前位置（模拟MongoDB存储）\r\n\t\t\tsaveLocation() {\r\n\t\t\t\t// 在实际项目中，这里应该调用后端API将位置信息存储到MongoDB\r\n\t\t\t\tconst location = {\r\n\t\t\t\t\tid: Date.now(),\r\n\t\t\t\t\tname: `位置_${new Date().toLocaleString()}`,\r\n\t\t\t\t\tlatitude: this.latitude,\r\n\t\t\t\t\tlongitude: this.longitude,\r\n\t\t\t\t\ttime: new Date().toLocaleString()\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t// 模拟API调用\r\n\t\t\t\tconsole.log('保存位置到MongoDB:', location);\r\n\t\t\t\t\r\n\t\t\t\t// 保存到本地存储（实际项目中由后端返回）\r\n\t\t\t\tthis.savedLocations.push(location);\r\n\t\t\t\tthis.saveToStorage();\r\n\t\t\t\t\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '位置保存成功',\r\n\t\t\t\t\ticon: 'success'\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 加载保存的位置\r\n\t\t\tloadSavedLocations() {\r\n\t\t\t\tconst saved = uni.getStorageSync('savedLocations');\r\n\t\t\t\tif (saved) {\r\n\t\t\t\t\tthis.savedLocations = JSON.parse(saved);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 保存到本地存储\r\n\t\t\tsaveToStorage() {\r\n\t\t\t\tuni.setStorageSync('savedLocations', JSON.stringify(this.savedLocations));\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 显示保存的位置\r\n\t\t\tshowSavedLocations() {\r\n\t\t\t\tthis.showHistory = !this.showHistory;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 将历史位置设为终点\r\n\t\t\tsetAsEndLocation(location) {\r\n\t\t\t\tthis.endLocation = {\r\n\t\t\t\t\tlatitude: location.latitude,\r\n\t\t\t\t\tlongitude: location.longitude\r\n\t\t\t\t};\r\n\t\t\t\tthis.endLocationName = location.name;\r\n\t\t\t\tthis.showHistory = false;\r\n\t\t\t\tthis.updateMarkers();\r\n\t\t\t\tthis.drawRoute();\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t// 获取点击位置信息\r\n\t\t\tgetLocationInfo(e) {\r\n\t\t\t\tconst { latitude, longitude } = e.detail;\r\n\t\t\t\tconsole.log('点击位置:', latitude, longitude);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tmargin: 20rpx 0;\r\n\t}\r\n\r\n\t.text-area {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.title {\r\n\t\tfont-size: 36rpx;\r\n\t\tcolor: #8f8f94;\r\n\t}\r\n\t\r\n\t.map-container {\r\n\t\twidth: 100%;\r\n\t\theight: 600rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t}\r\n\t\r\n\t.route-planner {\r\n\t\tpadding: 20rpx;\r\n\t\tbackground-color: #fff;\r\n\t}\r\n\t\r\n\t.input-group {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 20rpx;\r\n\t}\r\n\t\r\n\t.label {\r\n\t\twidth: 100rpx;\r\n\t\tfont-size: 28rpx;\r\n\t}\r\n\t\r\n\tinput {\r\n\t\tflex: 1;\r\n\t\theight: 80rpx;\r\n\t\tborder: 1rpx solid #ddd;\r\n\t\tborder-radius: 8rpx;\r\n\t\tpadding: 0 20rpx;\r\n\t}\r\n\t\r\n\tbutton {\r\n\t\tmargin: 10rpx 0;\r\n\t}\r\n\t\r\n\t.history-list {\r\n\t\tpadding: 20rpx;\r\n\t\tbackground-color: #fff;\r\n\t\tmargin-top: 20rpx;\r\n\t}\r\n\t\r\n\t.history-title {\r\n\t\tfont-size: 32rpx;\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 10rpx;\r\n\t}\r\n\t\r\n\t.history-item {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 10rpx 0;\r\n\t\tborder-bottom: 1rpx solid #eee;\r\n\t}\r\n\t\r\n\t.history-item text {\r\n\t\tfont-size: 28rpx;\r\n\t\tcolor: #666;\r\n\t\tmargin-bottom: 5rpx;\r\n\t}\r\n</style>","import MiniProgramPage from 'D:/wxProject/地图demo/pages/index/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}